<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
      
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink">

  <head>
    <title>Some JavaScript SVG Browser Capability Tests</title>
    <!-- START Required for IE to support  inlined SVG -->
    <object id="AdobeSVG" width="1" height="1" classid="clsid:78156a80-c6a1-4bbf-8e6a-3cd390eeb4e2"></object>
    <?import namespace="svg" implementation="#AdobeSVG"?>
    <!-- END   Required for IE to support inlined SVG -->

    <link href="simple.css" rel="stylesheet" type="text/css"></link>
    <link href="interpreter/interpreter.css" rel="stylesheet" type="text/css"></link>


    <script type="text/javascript" src="../MochiKit/Base.js"></script>
    <script type="text/javascript" src="../MochiKit/Iter.js"></script>
    <script type="text/javascript" src="../MochiKit/Logging.js"></script>
    <script type="text/javascript" src="../MochiKit/DateTime.js"></script>
    <script type="text/javascript" src="../MochiKit/Format.js"></script>
    <script type="text/javascript" src="../MochiKit/Async.js"></script>
    <script type="text/javascript" src="../MochiKit/DOM.js"></script>
    <script type="text/javascript" src="../MochiKit/Style.js"></script>
    <script type="text/javascript" src="../MochiKit/LoggingPane.js"></script>
    <script type="text/javascript" src="../MochiKit/Color.js"></script>
    <script type="text/javascript" src="../MochiKit/Signal.js"></script>
    <script type="text/javascript" src="../MochiKit/Style.js"></script>
    <script type="text/javascript" src="../MochiKit/Position.js"></script>
    <script type="text/javascript" src="../MochiKit/Visual.js"></script>

    <script type="text/javascript" src="interpreter/interpreter.js"></script>

    <script type="text/javascript" src="../SVGKit/SVGKit.js" ></script>
    
    <script type="text/javascript">
      function drawStuff(svg) {
        try {
          log("Drawing with svg = ", svg,
                "htmlElemnt = " + svg.htmlElement,
                "svgDocument = " + svg.svgDocument,
                "svgElement = " + svg.svgElement);
          var newRect = svg.RECT({'x':10, 'y':10, 'width':80, 'height':80, 'fill':'blue', 'fill-opacity':.5});
          svg.append(newRect);
          svg.append( svg.CIRCLE( {'cx':50, 'cy':50, 'r':20, 'fill':'purple', 'fill-opacity':.3} ) );
        }
        catch (e) {
          logError("Exception in Create's init subfunction: ", e);
        }
      }
      
      function testManipulate(svg_id) {
        try {
          log("Getting SVG")
          var svg = new SVGKit(svg_id);
          drawStuff(svg)
        }
        catch (e) {
            logError("Exception in Manipulate: ", e);
        }
      }

      function testCreate(type) {
        try {
          var svg = new SVGKit(100, 100, 'new_'+type+'htmlElement', type);
          appendChildNodes('new_'+type, svg.htmlElement);
          svg.whenReady(partial(drawStuff,svg));
        }
        catch (e) {
            logError("Exception in testCreate: ", e);
        }
      }

      function testLoad(type) {
        try {
          var svg = new SVGKit('../tests/example.svg', 'load_'+type+'htmlElement', type);  // Path is with respect to JS code for some reason.
          
          
          var appendHtmlElement = function (svg, type) {
            try {
              appendChildNodes('load_'+type, svg.htmlElement);
            }
            catch (e) {
                logError("Exception in Create: ", e);
            }
          }
          
          // The mess below is a result of inline being handled differently from object and embed
          if (svg.htmlElement != null)
              appendHtmlElement(svg, type)  // For object or embed
          else
              svg.whenReady( partial(appendHtmlElement, svg, type) );  // For inline, must wait for XML to load.
              
          svg.whenReady(partial(drawStuff,svg));
        }
        catch (e) {
            logError("Exception in Load: ", e);
        }
          
      }

      
      addLoadEvent(partial(testLoad, 'embed'));
      addLoadEvent(partial(testLoad, 'object'));
      addLoadEvent(partial(testLoad, 'inline'));
      addLoadEvent(partial(testManipulate, 'embed1'));
      addLoadEvent(partial(testManipulate, 'object1'));
      addLoadEvent(partial(testManipulate, 'inline1'));
      addLoadEvent(partial(testCreate, 'embed'));
      addLoadEvent(partial(testCreate, 'object'));
      addLoadEvent(partial(testCreate, 'inline'));

      addLoadEvent(partial(testManipulate, 'inline_ie'));
    </script>
  </head>

  <body>


<h1>Different Ways of including and getting at SVG</h1>
<p>The whole table works flawlessly in Firefox.  In IE there are problems with 
<code>object</code> and <code>embed</code> and <code>inline</code> works only sort of.</p>

<table id="tests" border="1">
<tr>
<td align="center"><strong>Description</strong></td>
<td align="center"><strong>Embed</strong></td>
<td align="center"><strong>Object</strong></td>
<td align="center"><strong>Inline SVG</strong></td>
</tr>


<tr>
<td>Load SVG</td>
<td id="load_embed"><p>In: FF, IE, Sa</p></td>
<td id="load_object"><p>In: FF, O8, Sa</p></td>
<td id="load_inline"><p>In: FF</p></td>
</tr>

<tr>
<td>Manipulate Existing SVG</td>
<td><p>In: FF, IE</p>
    <embed  id="embed1" src="example.svg" width="150" height="150"
            type="image/svg+xml"
            pluginspage="http://www.adobe.com/svg/viewer/install/"></embed>
</td>
<td><p>In: FF</p>
    <object id="object1" data="example.svg" width="150" height="150" type="image/svg+xml">
        You can't display SVG.
    </object>
</td>
<td>
<p>In: FF (xhtml), IE (svg:svg), O8</p>
    
    <svg id="inline1" xmlns="http://www.w3.org/2000/svg" width="150" height="150">
      <rect
           style="fill:#3362c0;fill-opacity:0.58024693;stroke:#120808;stroke-width:6;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
           id="rect1381"
           width="142.5"
           height="142.5"
           x="4"
           y="4" />
    </svg>
</td>
</tr>

<tr>
<td>New SVG</td>
<td id="new_embed"><p>In: FF</p></td>
<td id="new_object"><p>In: FF</p></td>
<td id="new_inline"><p>In: FF, IE, O8</p></td>
</tr>

</table>

<div>

<p>IE Style <code>svg:svg</code> inline include.  
Inline includes of both types only work in Firefox if it's XHTML type.
Creating New SVGs inline works if it's .html extension (with XHTML doctype) but I haven't tried it from a server yet.</p>


<svg:svg baseProfile="full" version="1.1" id="inline_ie" xmlns="http://www.w3.org/2000/svg" width="150" height="150">
  <svg:rect
       style="fill:#3362c0;fill-opacity:0.58024693;stroke:#120808;stroke-width:6;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
       id="rect1381"
       width="142.5"
       height="142.5"
       x="4"
       y="4" />
</svg:svg>

<p>Opera Support is spotty.  If it doesn't work, I hit reload a few times and it comes up.</p>

</div>
<!--
<p>What follows is a pool of empty SVGs 100x100</p>
<embed  id="empty" src="../MochiKit/empty.svg" width="100" height="100"
        type="image/svg+xml"
        pluginspage="http://www.adobe.com/svg/viewer/install/"></embed>
<embed  id="empty1" src="../MochiKit/empty.svg" width="100" height="100"
        type="image/svg+xml"
        pluginspage="http://www.adobe.com/svg/viewer/install/"></embed>
<embed  id="empty2" src="../MochiKit/empty.svg" width="100" height="100"
        type="image/svg+xml"
        pluginspage="http://www.adobe.com/svg/viewer/install/"></embed>
<embed  id="empty3" src="../MochiKit/empty.svg" width="100" height="100"
        type="image/svg+xml"
        pluginspage="http://www.adobe.com/svg/viewer/install/"></embed>
<embed  id="empty4" src="../MochiKit/empty.svg" width="100" height="100"
        type="image/svg+xml"
        pluginspage="http://www.adobe.com/svg/viewer/install/"></embed>
-->

<div id="mydiv"></div>
<div id="codediv"></div>

        <form id="interpreter_form" autocomplete="off" style="font-size: medium">
            <div id="interpreter_area">
                <div id="interpreter_output"></div>
            </div>
            <div id="oneline">
                <input id="interpreter_text" name="input_text" type="text" class="textbox" size="100" />
            </div>
            <div id="multiline">
                <textarea id="interpreter_textarea" name="input_textarea" type="text" class="textbox" cols="97" rows="10"></textarea>
                <br />
            </div>
        </form>
        <div>
            Notes:
            <ul>
                <li>
                    To write multi-line code snippets, use the lower text area
                    and press ctrl-enter or cmd-enter to submit.
                </li>
                <li>
                    <tt>function name() {}</tt> syntax might not end up in
                    window scope, so use <tt>name = function () {}</tt>
                    syntax instead
                </li>
                <li>
                    If you want to stuff something into the output window
                    other than the <tt>repr(...)</tt> of the expression
                    result, use the <tt>writeln(...)</tt> function.
                    It accepts anything that MochiKit.DOM does, so you can
                    even put styled stuff in there!
                </li>
                <li>
                    Use <tt>clear()</tt> to clear the interpreter window.
                </li>
                <li>
                    Up and down arrow keys work as a rudimentary history
                </li>
                <li>
                    <tt>_</tt> is the value of the last expression
                    that was not <tt>undefined</tt>, <tt>last_exc</tt> is
                    the value of the last unhandled exception.
                </li>
            </ul>
        </div>
    <p>MochiKit Logger: <a href="javascript:MochiKit.Logging.logger.debuggingBookmarklet()">
    javascript:MochiKit.Logging.logger.debuggingBookmarklet()</a></p>

</body>
</html>
